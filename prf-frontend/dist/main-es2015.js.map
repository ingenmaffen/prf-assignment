{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/recipes/edit/edit.component.ts","./src/app/recipes/edit/edit.component.html","./src/app/recipes/list/list.component.ts","./src/app/recipes/list/list.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipes.module.ts","./src/app/recipes/recipes.service.ts","./src/app/recipes/view/view.component.ts","./src/app/recipes/view/view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      { path: '', redirectTo: 'recipes/list', pathMatch: 'full' },\n      {\n        path: 'recipes',\n        loadChildren: () =>\n          import('./recipes/recipes.module').then((m) => m.RecipesModule),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'prf-frontend';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipesModule } from './recipes/recipes.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [AppComponent, RecipesComponent],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RecipesModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RecipesService, RecipeCategory, Ingredient } from '../recipes.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss'],\n})\nexport class EditComponent implements OnInit {\n  recipeId: string;\n  formGroup: FormGroup;\n\n  categories: RecipeCategory[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private service: RecipesService\n  ) {}\n\n  ngOnInit(): void {\n    this.getCategories();\n\n    // TODO: form validation\n    this.formGroup = this.formBuilder.group({\n      name: null,\n      category: null,\n      ingredients: this.formBuilder.array([]),\n      steps: this.formBuilder.array([]),\n      image: null, // TODO: image upload\n    });\n\n    this.recipeId = this.activatedRoute.snapshot.queryParams.recipeId;\n    if (this.recipeId) {\n      // load recipe for edit\n      this.getRecipe(this.recipeId);\n    } else {\n      // create new recipe\n      this.addIngredientToFormArray();\n      this.addStepToFormArray();\n    }\n  }\n\n  sendRecipe(): void {\n    if (this.recipeId) {\n      // update recipe\n      this.service\n        .updateRecipe(this.recipeId, this.formGroup.value)\n        .subscribe((val) => {\n          this.navigateToDetails();\n        });\n    } else {\n      // create recipe\n      this.service.postRecipe(this.formGroup.value).subscribe((val) => {\n        // TODO: proper user feedback (toastr?)\n        this.navigateToList();\n      });\n    }\n  }\n\n  addIngredientToFormArray(val?: Ingredient): void {\n    (this.formGroup.controls['ingredients'] as FormArray).push(\n      this.formBuilder.group({\n        quantity: val && val.quantity ? val.quantity : null,\n        unit: val && val.unit ? val.unit : null,\n        ingredientName: val && val.ingredientName ? val.ingredientName : null,\n      })\n    );\n  }\n\n  removeIngredientFromFormArray(index: number): void {\n    (this.formGroup.controls.ingredients as FormArray).removeAt(index);\n  }\n\n  addStepToFormArray(val?: string): void {\n    (this.formGroup.controls['steps'] as FormArray).push(\n      this.formBuilder.control(val)\n    );\n  }\n\n  removeStepFromFormArray(index: number): void {\n    (this.formGroup.controls.steps as FormArray).removeAt(index);\n  }\n\n  cancel(): void {\n    if (this.recipeId) {\n      this.navigateToDetails();\n    } else {\n      this.navigateToList();\n    }\n  }\n\n  private getRecipe(id): void {\n    this.service.getRecipe(id).subscribe((recipe) => {\n      this.formGroup.controls.name.setValue(recipe.name);\n      this.formGroup.controls.category.setValue(recipe.category);\n      recipe.ingredients.forEach((ingredient) => {\n        this.addIngredientToFormArray(ingredient);\n      });\n      recipe.steps.forEach((step) => {\n        this.addStepToFormArray(step);\n      });\n    });\n  }\n\n  private getCategories(): void {\n    this.service.getRecipeCategories().subscribe((categories) => {\n      this.categories = categories;\n    });\n  }\n\n  private navigateToList(): void {\n    this.router.navigate([`/recipes/list`]);\n  }\n\n  private navigateToDetails(): void {\n    this.router.navigate([`/recipes/view`], {\n      queryParams: { recipeId: this.recipeId },\n    });\n  }\n}\n","<div class=\"recipe-editor-container\">\n  <div class=\"placeholder\"></div>\n  <mat-card class=\"card\">\n    <div [formGroup]=\"formGroup\">\n      <div class=\"form-control\">\n        <mat-form-field>\n          <input matInput formControlName=\"name\" placeholder=\"Név\" required />\n        </mat-form-field>\n      </div>\n      <div class=\"form-control\">\n        <mat-form-field>\n          <mat-select\n            formControlName=\"category\"\n            placeholder=\"Kategória\"\n            required\n          >\n            <mat-option\n              *ngFor=\"let category of categories\"\n              [value]=\"category.value\"\n            >\n              {{ category.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <!-- <div class=\"form-control\">\n      TODO: képfeltöltés\n    </div> -->\n    <div class=\"form-control\">\n      <span>Hozzávalók:</span>\n      <div\n        class=\"form-control\"\n        *ngFor=\"\n          let ingredient of formGroup.controls.ingredients['controls'];\n          index as i\n        \"\n        [formGroup]=\"ingredient\"\n      >\n        <mat-form-field class=\"inline-input quantity-input\">\n          <input\n            matInput\n            type=\"number\"\n            formControlName=\"quantity\"\n            placeholder=\"Mennyiség\"\n          />\n        </mat-form-field>\n        <mat-form-field class=\"inline-input unit-input\">\n          <input\n            matInput\n            type=\"text\"\n            formControlName=\"unit\"\n            placeholder=\"Mértékegység\"\n          />\n        </mat-form-field>\n        <mat-form-field class=\"inline-input ingredient-name-input\">\n          <input\n            matInput\n            type=\"text\"\n            formControlName=\"ingredientName\"\n            placeholder=\"Hozzávaló neve\"\n          />\n        </mat-form-field>\n        <button\n          *ngIf=\"formGroup.controls.ingredients['controls'].length - 1\"\n          class=\"clickable form-array-button\"\n          (click)=\"removeIngredientFromFormArray(i)\"\n        >\n          -\n        </button>\n        <button\n          *ngIf=\"formGroup.controls.ingredients['controls'].length - 1 === i\"\n          class=\"clickable form-array-button\"\n          (click)=\"addIngredientToFormArray()\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n    <div class=\"form-control\">\n      <span>Elkészítés:</span>\n      <div\n        class=\"form-control\"\n        *ngFor=\"let step of formGroup.controls.steps['controls']; index as i\"\n      >\n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"{{ i + 1 }}. lépés\"\n            [formControl]=\"step\"\n          />\n        </mat-form-field>\n        <button\n          *ngIf=\"formGroup.controls.steps['controls'].length - 1\"\n          class=\"clickable form-array-button\"\n          (click)=\"removeStepFromFormArray(i)\"\n        >\n          -\n        </button>\n        <button\n          *ngIf=\"formGroup.controls.steps['controls'].length - 1 === i\"\n          class=\"clickable form-array-button\"\n          (click)=\"addStepToFormArray()\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n    <div class=\"editor-button-container\">\n      <button class=\"primary-button\" (click)=\"cancel()\">Mégse</button>\n      <button class=\"primary-button\" (click)=\"sendRecipe()\">Mentés</button>\n    </div>\n  </mat-card>\n  <div class=\"placeholder\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { RecipesService, RecipeListItem } from '../recipes.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n  placeholderImage: string =\n    '../../../assets/icons/insert_photo-black-24dp.svg';\n  recipeList: RecipeListItem[];\n\n  constructor(private service: RecipesService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getList();\n  }\n\n  navigateToView(id: string): void {\n    this.router.navigate([`/recipes/view`], { queryParams: { recipeId: id } });\n  }\n\n  private getList(): void {\n    this.service.getList().subscribe((items) => {\n      this.recipeList = items;\n    });\n  }\n}\n","<div class=\"recipe-list-container\">\n  <mat-card\n    *ngFor=\"let recipe of recipeList\"\n    class=\"recipe-list-item-container\"\n  >\n    <div class=\"recipe-inner-container\">\n      <div class=\"recipe-image-container\">\n        <img\n          class=\"clickable\"\n          height=\"140\"\n          src=\"{{ recipe.image ? recipe.image : placeholderImage }}\"\n          (click)=\"navigateToView(recipe.id)\"\n        />\n      </div>\n      <div class=\"recipe-information-container\">\n        <button\n          class=\"recipe-item-nav-button clickable\"\n          (click)=\"navigateToView(recipe.id)\"\n        >\n          {{ recipe.name }}\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n})\nexport class RecipesComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  navigateToList(): void {\n    this.router.navigate(['/recipes/list']);\n  }\n\n  navigateToNew(): void {\n    this.router.navigate(['/recipes/new']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button class=\"clickable main-nav-button\" (click)=\"navigateToList()\">\n    <img src=\"../../assets/icons/local_dining-white-24dp.svg\" />\n    <span>Receptkönyv</span>\n  </button>\n  <button class=\"clickable add-recipe-button\" (click)=\"navigateToNew()\">\n    <span>Recept hozzáadása</span>\n  </button>\n</mat-toolbar>\n<div class=\"content-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipesComponent } from './recipes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipesComponent,\n    children: [\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      {\n        path: 'list',\n        component: ListComponent,\n      },\n      {\n        path: 'view',\n        component: ViewComponent,\n      },\n      {\n        path: 'edit',\n        component: EditComponent,\n      },\n      {\n        path: 'new',\n        component: EditComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [ListComponent, ViewComponent, EditComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n  ],\n})\nexport class RecipesModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipesService {\n  constructor(private readonly http: HttpClient) {}\n\n  getRecipeCategories(): Observable<RecipeCategory[]> {\n    return this.http.get<RecipeCategory[]>(\n      `${environment.serverUrl}enums/recipe-categories`\n    );\n  }\n\n  getList(): Observable<RecipeListItem[]> {\n    return this.http.get<RecipeListItem[]>(\n      `${environment.serverUrl}recipe/list`\n    );\n  }\n\n  getRecipe(id: string): Observable<RecipeItem> {\n    return this.http.get<RecipeItem>(`${environment.serverUrl}recipe/${id}`);\n  }\n\n  postRecipe(recipe: RecipeEditModel): Observable<any> {\n    return this.http.post(`${environment.serverUrl}new-recipe`, recipe);\n  }\n\n  updateRecipe(recipeId: string, recipe: RecipeEditModel): Observable<any> {\n    return this.http.put(\n      `${environment.serverUrl}update-recipe/${recipeId}`,\n      recipe\n    );\n  }\n}\n\nexport interface RecipeListItem {\n  id: string;\n  image: string;\n  name: string;\n}\n\nexport interface RecipeItem {\n  _id: string;\n  name: string;\n  category: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n  steps: string[];\n  ingredients: Ingredient[];\n  creationDate: Date;\n  reviews: any[];\n  image?: string;\n}\n\nexport interface RecipeEditModel {\n  name: string;\n  category: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n  ingredients: Ingredient[];\n  steps: string[];\n}\n\nexport interface RecipeCategory {\n  name: string;\n  value: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n}\n\nexport interface Ingredient {\n  ingredientName: string;\n  quantity: number;\n  unit: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RecipeItem, RecipesService } from '../recipes.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss'],\n})\nexport class ViewComponent implements OnInit {\n  placeholderImage: string =\n    '../../../assets/icons/insert_photo-black-24dp.svg';\n  recipeId: string;\n  recipeDetails: RecipeItem;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private service: RecipesService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.recipeId = this.activatedRoute.snapshot.queryParams.recipeId;\n    if (this.recipeId) {\n      this.getRecipe(this.recipeId);\n    } else {\n      this.navigateToList();\n    }\n  }\n\n  navigateToList(): void {\n    this.router.navigate(['recipes/list']);\n  }\n\n  navigateToEdit(): void {\n    this.router.navigate(['recipes/edit'], {\n      queryParams: { recipeId: this.recipeId },\n    });\n  }\n\n  private getRecipe(id): void {\n    this.service.getRecipe(id).subscribe((recipe) => {\n      this.recipeDetails = recipe;\n    });\n  }\n}\n","<div *ngIf=\"recipeDetails\" class=\"recipe-view-container\">\n  <button class=\"primary-button back-button\" (click)=\"navigateToList()\">\n    < Vissza\n  </button>\n  <button class=\"primary-button edit-button\" (click)=\"navigateToEdit()\">\n    Szerkesztés\n  </button>\n  <div class=\"recipe-header-container\">\n    <img\n      class=\"clickable\"\n      height=\"280\"\n      src=\"{{ recipeDetails.image ? recipeDetails.image : placeholderImage }}\"\n    />\n    <h1>{{ recipeDetails.name }}</h1>\n  </div>\n  <div class=\"recipe-information-container\">\n    <div class=\"ingredients-container\">\n      <span>Hozzávalók:</span>\n      <ul>\n        <li *ngFor=\"let ingredient of recipeDetails.ingredients\">\n          <span\n            >{{ ingredient.quantity }} {{ ingredient.unit }}\n            {{ ingredient.ingredientName }}</span\n          >\n        </li>\n      </ul>\n    </div>\n    <div class=\"steps-container\">\n      <span>Elkészítés</span>\n      <ul>\n        <li *ngFor=\"let step of recipeDetails.steps\">\n          <span>{{ step }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}