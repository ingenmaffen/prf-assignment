{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/recipes/edit/edit.component.ts","webpack:///src/app/recipes/edit/edit.component.html","webpack:///src/app/recipes/list/list.component.ts","webpack:///src/app/recipes/list/list.component.html","webpack:///src/app/recipes/recipes.component.ts","webpack:///src/app/recipes/recipes.component.html","webpack:///src/app/recipes/recipes.module.ts","webpack:///src/app/recipes/recipes.service.ts","webpack:///src/app/recipes/view/view.component.ts","webpack:///src/app/recipes/view/view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","loadChildren","m","RecipesModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditComponent","activatedRoute","router","formBuilder","service","categories","getCategories","formGroup","group","name","category","ingredients","array","steps","image","recipeId","snapshot","queryParams","getRecipe","addIngredientToFormArray","addStepToFormArray","updateRecipe","value","subscribe","val","navigateToDetails","postRecipe","navigateToList","controls","push","quantity","unit","ingredientName","index","removeAt","control","recipe","setValue","forEach","ingredient","step","getRecipeCategories","navigate","cancel","sendRecipe","ListComponent","placeholderImage","getList","items","recipeList","RecipesComponent","navigateToNew","forChild","RecipesService","http","get","serverUrl","post","put","providedIn","ViewComponent","recipeDetails","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    children: [\n      { path: '', redirectTo: 'recipes/list', pathMatch: 'full' },\n      {\n        path: 'recipes',\n        loadChildren: () =>\n          import('./recipes/recipes.module').then((m) => m.RecipesModule),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'prf-frontend';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipesModule } from './recipes/recipes.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [AppComponent, RecipesComponent],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RecipesModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RecipesService, RecipeCategory, Ingredient } from '../recipes.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss'],\n})\nexport class EditComponent implements OnInit {\n  recipeId: string;\n  formGroup: FormGroup;\n\n  categories: RecipeCategory[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private service: RecipesService\n  ) {}\n\n  ngOnInit(): void {\n    this.getCategories();\n\n    // TODO: form validation\n    this.formGroup = this.formBuilder.group({\n      name: null,\n      category: null,\n      ingredients: this.formBuilder.array([]),\n      steps: this.formBuilder.array([]),\n      image: null, // TODO: image upload\n    });\n\n    this.recipeId = this.activatedRoute.snapshot.queryParams.recipeId;\n    if (this.recipeId) {\n      // load recipe for edit\n      this.getRecipe(this.recipeId);\n    } else {\n      // create new recipe\n      this.addIngredientToFormArray();\n      this.addStepToFormArray();\n    }\n  }\n\n  sendRecipe(): void {\n    if (this.recipeId) {\n      // update recipe\n      this.service\n        .updateRecipe(this.recipeId, this.formGroup.value)\n        .subscribe((val) => {\n          this.navigateToDetails();\n        });\n    } else {\n      // create recipe\n      this.service.postRecipe(this.formGroup.value).subscribe((val) => {\n        // TODO: proper user feedback (toastr?)\n        this.navigateToList();\n      });\n    }\n  }\n\n  addIngredientToFormArray(val?: Ingredient): void {\n    (this.formGroup.controls['ingredients'] as FormArray).push(\n      this.formBuilder.group({\n        quantity: val && val.quantity ? val.quantity : null,\n        unit: val && val.unit ? val.unit : null,\n        ingredientName: val && val.ingredientName ? val.ingredientName : null,\n      })\n    );\n  }\n\n  removeIngredientFromFormArray(index: number): void {\n    (this.formGroup.controls.ingredients as FormArray).removeAt(index);\n  }\n\n  addStepToFormArray(val?: string): void {\n    (this.formGroup.controls['steps'] as FormArray).push(\n      this.formBuilder.control(val)\n    );\n  }\n\n  removeStepFromFormArray(index: number): void {\n    (this.formGroup.controls.steps as FormArray).removeAt(index);\n  }\n\n  cancel(): void {\n    if (this.recipeId) {\n      this.navigateToDetails();\n    } else {\n      this.navigateToList();\n    }\n  }\n\n  private getRecipe(id): void {\n    this.service.getRecipe(id).subscribe((recipe) => {\n      this.formGroup.controls.name.setValue(recipe.name);\n      this.formGroup.controls.category.setValue(recipe.category);\n      recipe.ingredients.forEach((ingredient) => {\n        this.addIngredientToFormArray(ingredient);\n      });\n      recipe.steps.forEach((step) => {\n        this.addStepToFormArray(step);\n      });\n    });\n  }\n\n  private getCategories(): void {\n    this.service.getRecipeCategories().subscribe((categories) => {\n      this.categories = categories;\n    });\n  }\n\n  private navigateToList(): void {\n    this.router.navigate([`/recipes/list`]);\n  }\n\n  private navigateToDetails(): void {\n    this.router.navigate([`/recipes/view`], {\n      queryParams: { recipeId: this.recipeId },\n    });\n  }\n}\n","<div class=\"recipe-editor-container\">\n  <div class=\"placeholder\"></div>\n  <mat-card class=\"card\">\n    <div [formGroup]=\"formGroup\">\n      <div class=\"form-control\">\n        <mat-form-field>\n          <input matInput formControlName=\"name\" placeholder=\"Név\" required />\n        </mat-form-field>\n      </div>\n      <div class=\"form-control\">\n        <mat-form-field>\n          <mat-select\n            formControlName=\"category\"\n            placeholder=\"Kategória\"\n            required\n          >\n            <mat-option\n              *ngFor=\"let category of categories\"\n              [value]=\"category.value\"\n            >\n              {{ category.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <!-- <div class=\"form-control\">\n      TODO: képfeltöltés\n    </div> -->\n    <div class=\"form-control\">\n      <span>Hozzávalók:</span>\n      <div\n        class=\"form-control\"\n        *ngFor=\"\n          let ingredient of formGroup.controls.ingredients['controls'];\n          index as i\n        \"\n        [formGroup]=\"ingredient\"\n      >\n        <mat-form-field class=\"inline-input quantity-input\">\n          <input\n            matInput\n            type=\"number\"\n            formControlName=\"quantity\"\n            placeholder=\"Mennyiség\"\n          />\n        </mat-form-field>\n        <mat-form-field class=\"inline-input unit-input\">\n          <input\n            matInput\n            type=\"text\"\n            formControlName=\"unit\"\n            placeholder=\"Mértékegység\"\n          />\n        </mat-form-field>\n        <mat-form-field class=\"inline-input ingredient-name-input\">\n          <input\n            matInput\n            type=\"text\"\n            formControlName=\"ingredientName\"\n            placeholder=\"Hozzávaló neve\"\n          />\n        </mat-form-field>\n        <button\n          *ngIf=\"formGroup.controls.ingredients['controls'].length - 1\"\n          class=\"clickable form-array-button\"\n          (click)=\"removeIngredientFromFormArray(i)\"\n        >\n          -\n        </button>\n        <button\n          *ngIf=\"formGroup.controls.ingredients['controls'].length - 1 === i\"\n          class=\"clickable form-array-button\"\n          (click)=\"addIngredientToFormArray()\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n    <div class=\"form-control\">\n      <span>Elkészítés:</span>\n      <div\n        class=\"form-control\"\n        *ngFor=\"let step of formGroup.controls.steps['controls']; index as i\"\n      >\n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"{{ i + 1 }}. lépés\"\n            [formControl]=\"step\"\n          />\n        </mat-form-field>\n        <button\n          *ngIf=\"formGroup.controls.steps['controls'].length - 1\"\n          class=\"clickable form-array-button\"\n          (click)=\"removeStepFromFormArray(i)\"\n        >\n          -\n        </button>\n        <button\n          *ngIf=\"formGroup.controls.steps['controls'].length - 1 === i\"\n          class=\"clickable form-array-button\"\n          (click)=\"addStepToFormArray()\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n    <div class=\"editor-button-container\">\n      <button class=\"primary-button\" (click)=\"cancel()\">Mégse</button>\n      <button class=\"primary-button\" (click)=\"sendRecipe()\">Mentés</button>\n    </div>\n  </mat-card>\n  <div class=\"placeholder\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { RecipesService, RecipeListItem } from '../recipes.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent implements OnInit {\n  placeholderImage: string =\n    '../../../assets/icons/insert_photo-black-24dp.svg';\n  recipeList: RecipeListItem[];\n\n  constructor(private service: RecipesService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getList();\n  }\n\n  navigateToView(id: string): void {\n    this.router.navigate([`/recipes/view`], { queryParams: { recipeId: id } });\n  }\n\n  private getList(): void {\n    this.service.getList().subscribe((items) => {\n      this.recipeList = items;\n    });\n  }\n}\n","<div class=\"recipe-list-container\">\n  <mat-card\n    *ngFor=\"let recipe of recipeList\"\n    class=\"recipe-list-item-container\"\n  >\n    <div class=\"recipe-inner-container\">\n      <div class=\"recipe-image-container\">\n        <img\n          class=\"clickable\"\n          height=\"140\"\n          src=\"{{ recipe.image ? recipe.image : placeholderImage }}\"\n          (click)=\"navigateToView(recipe.id)\"\n        />\n      </div>\n      <div class=\"recipe-information-container\">\n        <button\n          class=\"recipe-item-nav-button clickable\"\n          (click)=\"navigateToView(recipe.id)\"\n        >\n          {{ recipe.name }}\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n})\nexport class RecipesComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  navigateToList(): void {\n    this.router.navigate(['/recipes/list']);\n  }\n\n  navigateToNew(): void {\n    this.router.navigate(['/recipes/new']);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button class=\"clickable main-nav-button\" (click)=\"navigateToList()\">\n    <img src=\"../../assets/icons/local_dining-white-24dp.svg\" />\n    <span>Receptkönyv</span>\n  </button>\n  <button class=\"clickable add-recipe-button\" (click)=\"navigateToNew()\">\n    <span>Recept hozzáadása</span>\n  </button>\n</mat-toolbar>\n<div class=\"content-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecipesComponent } from './recipes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecipesComponent,\n    children: [\n      { path: '', redirectTo: 'list', pathMatch: 'full' },\n      {\n        path: 'list',\n        component: ListComponent,\n      },\n      {\n        path: 'view',\n        component: ViewComponent,\n      },\n      {\n        path: 'edit',\n        component: EditComponent,\n      },\n      {\n        path: 'new',\n        component: EditComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [ListComponent, ViewComponent, EditComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n  ],\n})\nexport class RecipesModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipesService {\n  constructor(private readonly http: HttpClient) {}\n\n  getRecipeCategories(): Observable<RecipeCategory[]> {\n    return this.http.get<RecipeCategory[]>(\n      `${environment.serverUrl}enums/recipe-categories`\n    );\n  }\n\n  getList(): Observable<RecipeListItem[]> {\n    return this.http.get<RecipeListItem[]>(\n      `${environment.serverUrl}recipe/list`\n    );\n  }\n\n  getRecipe(id: string): Observable<RecipeItem> {\n    return this.http.get<RecipeItem>(`${environment.serverUrl}recipe/${id}`);\n  }\n\n  postRecipe(recipe: RecipeEditModel): Observable<any> {\n    return this.http.post(`${environment.serverUrl}new-recipe`, recipe);\n  }\n\n  updateRecipe(recipeId: string, recipe: RecipeEditModel): Observable<any> {\n    return this.http.put(\n      `${environment.serverUrl}update-recipe/${recipeId}`,\n      recipe\n    );\n  }\n}\n\nexport interface RecipeListItem {\n  id: string;\n  image: string;\n  name: string;\n}\n\nexport interface RecipeItem {\n  _id: string;\n  name: string;\n  category: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n  steps: string[];\n  ingredients: Ingredient[];\n  creationDate: Date;\n  reviews: any[];\n  image?: string;\n}\n\nexport interface RecipeEditModel {\n  name: string;\n  category: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n  ingredients: Ingredient[];\n  steps: string[];\n}\n\nexport interface RecipeCategory {\n  name: string;\n  value: 'breakfast' | 'soup' | 'mainDish' | 'salad' | 'dessert';\n}\n\nexport interface Ingredient {\n  ingredientName: string;\n  quantity: number;\n  unit: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RecipeItem, RecipesService } from '../recipes.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss'],\n})\nexport class ViewComponent implements OnInit {\n  placeholderImage: string =\n    '../../../assets/icons/insert_photo-black-24dp.svg';\n  recipeId: string;\n  recipeDetails: RecipeItem;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private service: RecipesService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.recipeId = this.activatedRoute.snapshot.queryParams.recipeId;\n    if (this.recipeId) {\n      this.getRecipe(this.recipeId);\n    } else {\n      this.navigateToList();\n    }\n  }\n\n  navigateToList(): void {\n    this.router.navigate(['recipes/list']);\n  }\n\n  navigateToEdit(): void {\n    this.router.navigate(['recipes/edit'], {\n      queryParams: { recipeId: this.recipeId },\n    });\n  }\n\n  private getRecipe(id): void {\n    this.service.getRecipe(id).subscribe((recipe) => {\n      this.recipeDetails = recipe;\n    });\n  }\n}\n","<div *ngIf=\"recipeDetails\" class=\"recipe-view-container\">\n  <button class=\"primary-button back-button\" (click)=\"navigateToList()\">\n    < Vissza\n  </button>\n  <button class=\"primary-button edit-button\" (click)=\"navigateToEdit()\">\n    Szerkesztés\n  </button>\n  <div class=\"recipe-header-container\">\n    <img\n      class=\"clickable\"\n      height=\"280\"\n      src=\"{{ recipeDetails.image ? recipeDetails.image : placeholderImage }}\"\n    />\n    <h1>{{ recipeDetails.name }}</h1>\n  </div>\n  <div class=\"recipe-information-container\">\n    <div class=\"ingredients-container\">\n      <span>Hozzávalók:</span>\n      <ul>\n        <li *ngFor=\"let ingredient of recipeDetails.ingredients\">\n          <span\n            >{{ ingredient.quantity }} {{ ingredient.unit }}\n            {{ ingredient.ingredientName }}</span\n          >\n        </li>\n      </ul>\n    </div>\n    <div class=\"steps-container\">\n      <span>Elkészítés</span>\n      <ul>\n        <li *ngFor=\"let step of recipeDetails.steps\">\n          <span>{{ step }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}